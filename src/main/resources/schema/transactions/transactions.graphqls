extend type Query {
    getTransactionById (accountId: ID) : [Transaction]
}

extend type Mutation {
    addTransaction(transaction: DepositTransactionInput!): Boolean
}

interface Transaction {
    transactionId: ID!
    account: Account!
    postedTimestamp: DateTime!
    transactionTimestamp: DateTime!
    description: String!
    status: TransactionStatus!
    amount: PositiveFloat!
}

type DepositTransaction implements Transaction {
    account: DepositAccount!
    transactionId: ID!
    postedTimestamp: DateTime!
    transactionTimestamp: DateTime!
    description: String!
    status: TransactionStatus!
    amount: PositiveFloat!
    transactionType: DepositTransactionType!
    payee: String!
    checkNumber: PositiveInt
}

input DepositTransactionInput {
    accountId: ID!
    transactionId: ID!
    postedTimestamp: DateTime!
    transactionTimestamp: DateTime!
    description: String!
    status: TransactionStatus!
    amount: PositiveFloat!
    transactionType: DepositTransactionType!
    payee: String
    checkNumber: PositiveInt
}